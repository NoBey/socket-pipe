// Generated by CoffeeScript 1.12.2
(function() {
  var Crypto, Transform,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Transform = (require('stream')).Transform;

  Crypto = require('crypto');

  module.exports = (function(superClass) {
    extend(_Class, superClass);

    function _Class() {
      return _Class.__super__.constructor.apply(this, arguments);
    }

    _Class.prototype.initCipher = function(cipher, password) {
      return this.cipher = Crypto.createCipher(cipher, password);
    };

    _Class.prototype.createPacket = function(buff) {
      var packet;
      packet = new Buffer(buff.length + 4);
      buff.copy(packet, 4, 0, buff.length - 1);
      packet.writeInt32LE(buff.length, 0);
      console.info("enconde " + buff.length);
      return packet;
    };

    _Class.prototype._transform = function(buff, enc, callback) {
      var e, packet;
      try {
        packet = this.createPacket(this.cipher.update(buff));
        return callback(null, packet);
      } catch (error) {
        e = error;
        return callback(e, null);
      }
    };

    return _Class;

  })(Transform);

}).call(this);
